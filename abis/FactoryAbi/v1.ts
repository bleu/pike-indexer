export const FactoryAbiV1 = [
  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
  {
    inputs: [{ internalType: 'address', name: 'target', type: 'address' }],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      { internalType: 'address', name: 'implementation', type: 'address' },
    ],
    name: 'ERC1967InvalidImplementation',
    type: 'error',
  },
  { inputs: [], name: 'ERC1967NonPayable', type: 'error' },
  { inputs: [], name: 'FailedInnerCall', type: 'error' },
  { inputs: [], name: 'InvalidInitialization', type: 'error' },
  { inputs: [], name: 'InvalidTimelock', type: 'error' },
  { inputs: [], name: 'NotInitializing', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },
  { inputs: [], name: 'UUPSUnauthorizedCallContext', type: 'error' },
  {
    inputs: [{ internalType: 'bytes32', name: 'slot', type: 'bytes32' }],
    name: 'UUPSUnsupportedProxiableUUID',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'version',
        type: 'uint64',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'protocolId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'pToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'timelock',
        type: 'address',
      },
    ],
    name: 'PTokenDeployed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'protocolId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'riskEngine',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'timelock',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'oracleEngine',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'initialGovernor',
        type: 'address',
      },
    ],
    name: 'ProtocolDeployed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'UPGRADE_INTERFACE_VERSION',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'uint256', name: 'protocolId', type: 'uint256' },
          { internalType: 'address', name: 'underlying', type: 'address' },
          {
            internalType: 'uint256',
            name: 'initialExchangeRateMantissa',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'reserveFactorMantissa',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolSeizeShareMantissa',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'borrowRateMaxMantissa',
            type: 'uint256',
          },
          { internalType: 'string', name: 'name', type: 'string' },
          { internalType: 'string', name: 'symbol', type: 'string' },
          { internalType: 'uint8', name: 'decimals', type: 'uint8' },
        ],
        internalType: 'struct IFactory.PTokenSetup',
        name: 'setupParams',
        type: 'tuple',
      },
    ],
    name: 'deployMarket',
    outputs: [{ internalType: 'address', name: 'pToken', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'initialGovernor', type: 'address' },
      { internalType: 'uint256', name: 'ownerShareMantissa', type: 'uint256' },
      {
        internalType: 'uint256',
        name: 'configuratorShareMantissa',
        type: 'uint256',
      },
    ],
    name: 'deployProtocol',
    outputs: [
      { internalType: 'address', name: 'riskEngine', type: 'address' },
      { internalType: 'address', name: 'oracleEngine', type: 'address' },
      {
        internalType: 'address payable',
        name: 'governorTimelock',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'protocolId', type: 'uint256' },
      { internalType: 'uint256', name: 'index', type: 'uint256' },
    ],
    name: 'getMarket',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'protocolId', type: 'uint256' }],
    name: 'getProtocolInfo',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'protocolId', type: 'uint256' },
          { internalType: 'uint256', name: 'numOfMarkets', type: 'uint256' },
          { internalType: 'address', name: 'protocolOwner', type: 'address' },
          { internalType: 'address', name: 'initialGovernor', type: 'address' },
          { internalType: 'address', name: 'riskEngine', type: 'address' },
          { internalType: 'address', name: 'oracleEngine', type: 'address' },
          { internalType: 'address', name: 'timelock', type: 'address' },
        ],
        internalType: 'struct IFactory.ProtocolInfo',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_initialOwner', type: 'address' },
      { internalType: 'address', name: '_riskEngineBeacon', type: 'address' },
      { internalType: 'address', name: '_oracleEngineBeacon', type: 'address' },
      { internalType: 'address', name: '_pTokenBeacon', type: 'address' },
      { internalType: 'address', name: '_timelockBeacon', type: 'address' },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oracleEngineBeacon',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pTokenBeacon',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolCount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'riskEngineBeacon',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'timelockBeacon',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'newImplementation', type: 'address' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const;
